trigger:
  branches:
    include:
    - master
    - test
    - develop

# no PR triggers
pr: none

resources:
- repo: self

variables:
  releaseName: 'identity-service'
  imageName: 'projectorigin/$(releaseName)'

  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    kubeCon: 'kubecon-eloprindelse-prod'
    namespace: 'eloprindelse'
    tag: ''
  ${{ if eq(variables['Build.SourceBranchName'], 'test') }}:
    kubeCon: 'test-kube-con'
    namespace: 'test-project-origin'
    tag: 'rc-'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    kubeCon: 'dev-kube-con'
    namespace: 'dev-project-origin'
    tag: 'canary-'

pool:
  vmImage: 'ubuntu-latest'

jobs:  
  - job: build_and_release
    displayName: Build and Release
    steps:

      - script: echo "##vso[task.setvariable variable=tag]$(tag)$(git describe --tags --long | sed '0,/-/s/-/./')"
        displayName: Append tag with git describe
      
      - task: Docker@2
        displayName: Build docker image
        inputs:
          command: build
          repository: $(imageName)
          Dockerfile: Dockerfile
          tags: $(tag)
      
      - task: Docker@2
        displayName: Build docker latest image
        condition: eq(variables['Build.SourceBranchName'], 'master')
        inputs:
          command: build
          repository: $(imageName)
          Dockerfile: Dockerfile
          tags: latest

      - task: Docker@2
        displayName: Push image
        inputs:
          command: push
          repository: $(imageName)
          containerRegistry: dockerHub
          tags: $(tag)

      - task: Docker@2
        displayName: Push latest image
        condition: eq(variables['Build.SourceBranchName'], 'master')
        inputs:
          command: push
          repository: $(imageName)
          containerRegistry: dockerHub
          tags: latest

  - job: deploy
    displayName: Deploy
    dependsOn: build_and_release
    condition: succeeded()
    steps:
      - script: echo "##vso[task.setvariable variable=tag]$(tag)$(git describe --tags --long | sed '0,/-/s/-/./')"
        displayName: Append tag with git describe

      - task: HelmDeploy@0
        displayName: Helm upgrade
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: $(kubeCon)
          namespace: $(namespace)
          command: upgrade
          chartType: filepath
          chartPath: ./chart
          releaseName: $(releaseName)
          overrideValues: tag=$(tag)
          install: true
          waitForExecution: true

  - job: rollback
    displayName: Rollback
    dependsOn: deploy
    condition: and(failed('deploy'), ne(variables['Build.SourceBranchName'], 'develop'))
    steps:
      - task: HelmDeploy@0
        displayName: Helm rollback
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: $(kubeCon)
          namespace: $(namespace)
          command: rollback
          arguments: $(releaseName)
          waitForExecution: true
