trigger:
  branches:
    include:
    - master
    - test
    - develop

# no PR triggers
pr: none

resources:
- repo: self

variables:
- name: releaseName
  value: 'identity-service'
- name: imageName
  value: 'projectorigin/$(releaseName)' 
- ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
  - group: 'production'
- ${{ if eq(variables['Build.SourceBranchName'], 'test') }}:
  - group: 'preprod'
- ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
  - group: 'develop'

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: build_and_release
    displayName: Build and Release
    steps:

      - script: echo "##vso[task.setvariable variable=tag]$(tag)$(git describe --tags --long | sed '0,/-/s/-/./')"
        displayName: Append tag with git describe
      
      - task: Docker@2
        displayName: Build docker image
        inputs:
          command: build
          repository: $(imageName)
          Dockerfile: Dockerfile
          tags: $(tag)
      
      - task: Docker@2
        displayName: Build docker latest image
        condition: eq(variables['Build.SourceBranchName'], 'master')
        inputs:
          command: build
          repository: $(imageName)
          Dockerfile: Dockerfile
          tags: latest

      - task: Docker@2
        displayName: Push image
        inputs:
          command: push
          repository: $(imageName)
          containerRegistry: dockerHub
          tags: $(tag)

      - task: Docker@2
        displayName: Push latest image
        condition: eq(variables['Build.SourceBranchName'], 'master')
        inputs:
          command: push
          repository: $(imageName)
          containerRegistry: dockerHub
          tags: latest

  - deployment: deploy
    displayName: Deploy
    dependsOn: build_and_release
    condition: succeeded()
    pool:
      ${{ if ne(variables['poolName'], '') }}:
        name: $(poolName)
      ${{ if eq(variables['poolName'], '') }}:
        vmImage: 'ubuntu-latest'
    environment: $(deploymentEnvironment)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              displayName: Download source

            - script: echo "##vso[task.setvariable variable=tag]$(tag)$(git describe --tags --long | sed '0,/-/s/-/./')"
              displayName: Append tag with git describe

            - task: HelmDeploy@0
              displayName: Helm upgrade
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceConnection: $(kubeCon)
                namespace: $(namespace)
                command: upgrade
                chartType: filepath
                chartPath: ./chart
                releaseName: $(releaseName)
                overrideValues: tag=$(tag),workerreplicas=$(workerreplicas)
                install: true
                waitForExecution: true
        on:
          failure:
            pool:
              ${{ if ne(variables['poolName'], '') }}:
                name: $(poolName)
              ${{ if eq(variables['poolName'], '') }}:
                vmImage: 'ubuntu-latest'
            steps:
              - task: HelmDeploy@0
                displayName: Helm rollback
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceConnection: $(kubeCon)
                  namespace: $(namespace)
                  command: rollback
                  arguments: $(releaseName)
                  waitForExecution: true
